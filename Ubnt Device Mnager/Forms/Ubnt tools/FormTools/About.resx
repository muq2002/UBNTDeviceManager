<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>